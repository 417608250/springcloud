<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	   default-lazy-init="false">
	
	<description>Spring Configuration</description>
	<!-- <context:annotation-config /> -->
	<!-- 使用Annotation自动注册Bean,扫描除@Controller以外的Bean -->
	<context:component-scan base-package="com.lee.*"> 
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	 <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF-8" />
        <property name="username" value="root" />
        <property name="password" value="root" />
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        		<!-- 初始化连接大小 -->
      	<property name="initialSize" value="0" />
        		<!-- 连接池最大使用连接数量 -->
      	<property name="maxActive" value="20" /> 
        		<!-- 连接池最大空闲 -->
      	<property name="maxIdle" value="20" /> 
        		<!-- 连接池最小空闲 -->
      	<property name="minIdle" value="0" /> 
       			<!--  获取连接最大等待时间 -->
      	<property name="maxWait" value="60000" />
    </bean> 
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.lee.entity" />
        <property name="persistenceProvider">
            <bean class="org.hibernate.ejb.HibernatePersistence" />
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="true" />
                <property name="database" value="MYSQL" />
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
                <property name="showSql" value="true" />
            </bean>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.query.substitutions" value="true 1, false 0" />
                <entry key="hibernate.default_batch_fetch_size" value="16" />
                <entry key="hibernate.max_fetch_depth" value="2" />
                <entry key="hibernate.generate_statistics" value="true" />
                <entry key="hibernate.bytecode.use_reflection_optimizer" value="true" />
                <entry key="hibernate.cache.use_second_level_cache" value="false" />
                <entry key="hibernate.cache.use_query_cache" value="false" />
                <entry key="hibernate.hbm2ddl.auto" value="update"/> 
            </map>
        </property>
    </bean>
    
    
	<aop:aspectj-autoproxy />
    <!-- 事务管理器 -->
     <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    
    <!-- dao -->
    <jpa:repositories base-package="com.lee.dao" transaction-manager-ref="transactionManager" 
    repository-impl-postfix="Impl" entity-manager-factory-ref="entityManagerFactory"  />
   
	<!--  
    注释让事务有效-->
	<tx:annotation-driven transaction-manager="transactionManager" /> 
	 <!-- 事务 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" />
            <tx:method name="get*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="select*" read-only="true" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice> 
    
    <bean id="logAop" class="com.lee.aop.LogAop"/>
    
    <!-- 事务入口 -->
    <aop:config >
        <aop:pointcut id="allServiceMethod" expression="execution(* com.lee.service.*.*(..))" />
        <aop:advisor pointcut-ref="allServiceMethod"  advice-ref="txAdvice" /> 
        <!-- <aop:aspect id="logAspect" order="3" ref="logAop">
        	 <aop:before method="printLog" pointcut-ref="allServiceMethod"/>
        	<aop:after method="afterExcute" pointcut-ref="allServiceMethod"/>         	
        	 <aop:around method="printLog" pointcut-ref="allServiceMethod"/>

        </aop:aspect> -->
    </aop:config>
</beans>